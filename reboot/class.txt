
＃＃＃＃＃＃＃ 讲课风格 ＃＃＃＃＃＃＃＃


一： 是什么——what
    1：什么项目
    2：有哪些功能
    3：会用到哪些技术——用到的技术，会通过写demo的形式掌握，在正式开发时，按照项目文档拼接各种demo即可
     （前几天的课程，老师讲课的重点在自动化运维的整体思想，和各个项目的逻辑, 没有重点介绍具体的技术知识点，我自己这一年也是跟着公司的架构师学习，他用到了很多不多的知识点，每次我看到他用到的新东西，都会非常兴奋，所以我会往技术层面侧重一些，把我的感觉兴奋的东西也分享给大家）
     

二： 为什么——why
    1： 项目解决了什么问题
    2： 项目的使用场景介绍，及扩展

三：怎么做——how
    1： 思路——流程图，思维导图……
    2： 实战——项目文档，功能代码分工开发
    3： 代码review 代码优化
    4： 项目总结，文档整理



＃＃＃＃＃＃＃＃＃＃   最后三天讲课内容  ＃＃＃＃＃＃＃＃

一：公用基础设施的编写

1：配置文件管理——ConfigParser模块
2：数据库连接，及工具函数抽象的类——类的应用
3：统一日志设置——logging模块
4：token的创建和解码——md5 hashlib模块


二：用户权限系统（rbac）——jsonrpc API + flask+jquery

1：用户的增删改查——添加用户时必须选择一个组，默认为test组
2：组的增删改查——admin组为超级管理员，有所有权限，其他角色定义不同的权限
3: 权限的增删改查——权限名对应相应的URL

三：发布系统——jsonrpc API + flask+jquery

1：项目的增删改查——与git关联，权限和项目同表，权限不细分，简单些
2：测试发布——用户依据权限，只能操作有权限的项目
3：申请发布——根据角色，显示不同的页面
4：发布列表——所有用户可见


由于很多同学反映前端不会，在项目实现过程中，会偏重用jquery和后端进行数据交互



＃＃＃＃＃＃＃＃＃＃  课程安排   ＃＃＃＃＃＃＃＃


第十天


1:  介绍讲课风格
2:  最后三天的讲课安排
3： git工作流及常用操作   (一小时)                     
4:  Configparser模块介绍及demo实现（十分钟）
5:  logging介绍，三种常用的demo实现（半小时）
6:  token介绍以及demo实现（20分钟）
7:  mysql抽象类的讲解实现（半小时）
8:  公共基础设施编写
9:  在基础设施的基础上，实现生成环境下的 用户登录和token生成 

10:  rbac思想介绍


作业： 编写用户，角色，权限系统的项目文档



第十一天
0:  前一天知识点回顾
1:  rbac用户权限系统思路及流程图讲解
2:  完善用户管理项目文档，并代码实现
2:  完善角色管理项目文档，并代码实现
3:  完善权限管理项目文档，并代码实现

4:  发布系统流程介绍
作业： 编写发布系统的项目文档

思维导图顺序——用户>角色>权限
代码编写顺序——权限>角色>用户


0: mysql抽象类的讲解实现(上周遗留)

1: API认证认证——装饰器
2: jsonrpc demo 
3: API对权限表的操作——权限表最简单，没有其他依赖，用户和组都依赖它
4: API角色表的操作——依赖权限表
5: API用户表的操作——依赖角色表
6: 前端套页面

已知bug：
用户表关联角色表，角色表中删除数据,用户表中还保存已删除的角色ID
角色表关联权限表，权限表中删除数据 角色表中海保存已删除的权限ID

解决方案：
技术层面：在代码读取关联表数据时，判断依赖表中ID是否存在，只遍历存在的ID2name，保证程序不保错，显示结果正常
逻辑层面：不允许删除管理表数据 
遗留问题：数据库存的r_id，p_id是脏数据


权限管理的使用说明：
1: 需要管理的功能分两块: 基础设施（用户,角色,权限,cmdb) 功能模块（git 代码发布，监控，第三方API.....）
2: sa角色有两层身份： 天神身份(可独立出来)，管理基础设施；凡人身份：操作功能模块
3: web和API端基础设施管理的权限验证都基于角色，即判断role是否为sa
4: 功能模块则一视同仁，判断权限是否匹配。



第十二天
0:   前一天知识点回顾
1：  发布系统思想讲解及项目文档完善
2：  项目管理代码编写
3:   测试发布代码编写
4:   申请发布及处理代码编写
5:   发布纪录代码编写

难点：——获取用户有权限的项目
思路：
1： 项目表中存了用户和组id, 我们需要把这些用户和组中的成员去重，然后反推出用户所拥有的项目
2:  如何将用户id转为name?
3:  如何将组id转为name,并且获得每个组的成员
4： 如何将某个项目中的用户和组中的成员合并，最终写成{'project1':['wd',pc],...}
5： 如何通过获取的项目与用户之间的关系，反推用户拥有哪些项目




备注： 最后一个项目尝试新的授课方式——git协作开发（课程最后一天，学员基本具备编码能力）
1:前一周，讲清楚项目思路和用到的知识点，写好项目文档
2:在项目文档中将功能模块细分，分配给学员自己编写，
3:学员通过git利用周一到周五业余时间协作开发,期间解决问题 合并代码让大家积极参与。 
4:周日课上讲解优化代码
5:结课

作业： 将之前写的cmdb  zabbix 模块换成新的ui



开发感悟

开发后回顾
1：对照需求演示功能
2：对照项目文档解释代码

开发前准备
1：根据需求画流程图，思维导图
2：根据需求写项目文档（技术点调研）
3：根据项目文档写代码
